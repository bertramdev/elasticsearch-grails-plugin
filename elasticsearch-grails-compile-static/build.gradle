buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'org.ajoberstar:gradle-git:1.4.2'
        classpath "org.grails.plugins:hibernate5:6.0.4"
    }
}

plugins {
    id "com.jfrog.bintray" version "1.2"
    // id 'com.jfrog.artifactory' version '4.0.0'
}




apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'groovy'
// apply plugin: "org.grails.grails-plugin"
ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}




dependencies {

    compile "org.grails:grails-core:${grailsVersion}"
    
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}


publishing {
	publications {
		maven(MavenPublication) {
			artifactId 'elasticsearch-grails-compile-static'
			pom.withXml {
				asNode().children().last() + {
					resolveStrategy = Closure.DELEGATE_FIRST
					name 'elasticsearch-grails-compile-static'
					description 'Elasticsearch Compiler Classes for CompileStatic.'
					url 'https://github.com/noamt/elasticsearch-grails-plugin'
					scm {
						url 'https://github.com/noamt/elasticsearch-grails-plugin'
						connection 'scm:https://moamt@github.com/noamt/elasticsearch-grails-plugin.git'
						developerConnection 'scm:git://github.com/noamt/elasticsearch-grails-plugin.git'
					}
					licenses {
						license {
							name 'The Apache Software License, Version 2.0'
							url 'http://www.apache.org/license/LICENSE-2.0.txt'
							distribution 'repo'
						}
					}
					developers {
						developer {
							id 'davydotcom'
							name 'David Estes'
							email 'davydotcom@gmail.com'
						}
					}
				}
			}
			from components.java
			artifact sourcesJar
			artifact javadocJar
		}
	}

	repositories {
		maven {
			credentials {
				username project.properties.get('artifactoryPublishUsername')
				password project.properties.get('artifactoryPublishPassword')
			}
			url 'https://repo.grails.org/grails/libs-snapshots-local/'
		}
	}
}

bintray {
	if(project.hasProperty('bintrayUser')) {
		user = bintrayUser
		key = bintrayKey
	}

    publish=true
	publications = ['maven']
	pkg {
		repo = 'grails-plugins'
		
		name = 'elasticsearch-grails-compile-static'
		licenses = ['Apache-2.0']
        version {
            if (project.hasProperty('mavenUser')) {
                mavenCentralSync {
                    sync = true //Optional (true by default). Determines whether to sync the version to Maven Central.
                    user = mavenUser //OSS user token
                    password = mavenPassword //OSS user password
                    close = '1'
                    //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
                }
            }
        }
	}
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

// apply from: "gradle/documentation.gradle"

// apply from: "gradle/publish.gradle"




